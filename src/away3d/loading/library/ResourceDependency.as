package away3d.loading.library{	import away3d.arcane;	import away3d.loading.parsers.ParserBase;		import flash.net.URLRequest;
	import away3d.loading.assets.IAsset;
	use namespace arcane;	/**	 * ResourceDependency represents the data required to load, parse and resolve additional files ("dependencies")	 * required by a parser, used by ResourceLoadSession.	 *	 * @see away3d.loading.ResourceManager	 * @see away3d.loading.ResourceLoadSession	 */    public class ResourceDependency    {		private var _ns : String;        private var _req : URLRequest;		private var _assets : Vector.<IAsset>;        private var _parentParser : ParserBase;		private var _data : *;        public function ResourceDependency(ns : String,  req : URLRequest, data : *, parentParser : ParserBase)        {			_ns = ns;			_req = req;            _parentParser = parentParser;			_data = data;						_assets = new Vector.<IAsset>;        }				public function get assets() : Vector.<IAsset>		{			return _assets;		}						public function get request() : URLRequest		{			return _req;		}						public function get namespace() : String		{			return _ns;		}						/**		 * The data containing the dependency to be parsed, if the resource was already loaded.		 */		public function get data() : *		{			return _data;		}				/**		 * The parser which is dependent on this ResourceDependency object.		 */        public function get parentParser() : ParserBase        {            return _parentParser;        }		/**		 * Resolve the dependency when it's loaded with the parent parser. For example, a dependency containing an		 * ImageResource would be assigned to a Mesh instance as a BitmapMaterial, a scene graph object would be added		 * to its intended parent. The dependency should be a member of the dependencies property.		 */        public function resolve() : void        {            if (_parentParser) _parentParser.resolveDependency(this);        }				/**		 * Resolve a dependency failure. For example, map loading failure from a 3d file		 */        public function resolveFailure() : void        {            if (_parentParser) _parentParser.resolveDependencyFailure(this);        }	}}